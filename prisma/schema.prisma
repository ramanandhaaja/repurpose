// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//sudo npx prisma migrate dev --name init
//sudo npx prisma migrate reset --force
//sudo npx prisma db pull

//sudo npx prisma db push --accept-data-loss -> pake ini
//sudo npx prisma generate



generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public", "auth"]
}

model Products {
  id           String     @id @default(uuid())
  created_at   DateTime   @default(now())
  category_id  String
  name         String
  descriptions String     @db.Text
  price        Float
  image_url    String     @db.Text
  category     Categories @relation(fields: [category_id], references: [id])

  @@index([category_id])
  @@schema("public")
}

model Categories {
  id           String     @id @default(uuid())
  created_at   DateTime   @default(now())
  name         String
  descriptions String     @db.Text
  products     Products[]

  @@schema("public")
}

model OriginalContent {
  id              String              @id @default(uuid()) @db.Uuid
  userId          String              @map("user_id") @db.Uuid
  title           String
  contentType     String              @map("content_type")
  contentUrl      String?             @map("content_url")
  contentText     String?             @map("content_text")
  filePath        String?             @map("file_path")
  fileType        String?             @map("file_type")
  createdAt       DateTime            @default(now()) @map("created_at") @db.Timestamptz
  updatedAt       DateTime            @updatedAt @map("updated_at") @db.Timestamptz
  user            User                @relation(fields: [userId], references: [id])
  repurposedContent RepurposedContent[]

  @@schema("public")
  @@map("original_content")
}

model RepurposedContent {
  id                String          @id @default(uuid()) @db.Uuid
  originalContentId String          @map("original_content_id") @db.Uuid
  outputType        String          @map("output_type")
  tone             String
  content          String
  characterCount   BigInt             @map("character_count") @db.BigInt
  isPublished      Boolean         @default(false) @map("is_published")
  createdAt        DateTime        @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime        @updatedAt @map("updated_at") @db.Timestamptz
  originalContent   OriginalContent @relation(fields: [originalContentId], references: [id])

  @@schema("public")
  @@map("repurposed_content")
}

model User {
  id              String            @id @db.Uuid
  fullName        String?           @map("full_name")
  createdAt       DateTime          @default(now()) @map("created_at") @db.Timestamptz
  updatedAt       DateTime          @updatedAt @map("updated_at") @db.Timestamptz
  originalContent OriginalContent[]

  @@schema("public")
  @@map("users")
}